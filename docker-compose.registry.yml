# Personal Pipeline - Local Docker Registry Infrastructure
# Authored by: DevOps Infrastructure Engineer
# Date: 2025-01-16
#
# Complete local Docker registry setup with:
# - Secure authentication
# - Multi-architecture support
# - Registry UI for management
# - TLS/SSL configuration
# - Volume management and persistence

version: '3.8'

services:
  # Main Docker Registry Service
  registry:
    image: registry:2.8.3
    container_name: pp-registry
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      # Registry Configuration
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
      
      # Authentication Configuration
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Personal Pipeline Registry"
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      
      # TLS Configuration (enable when certificates are available)
      # REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt
      # REGISTRY_HTTP_TLS_KEY: /certs/registry.key
      
      # Health Check Configuration
      REGISTRY_HEALTH_STORAGEDRIVER_ENABLED: "true"
      REGISTRY_HEALTH_STORAGEDRIVER_INTERVAL: 10s
      REGISTRY_HEALTH_STORAGEDRIVER_THRESHOLD: 3
      
      # Logging Configuration
      REGISTRY_LOG_LEVEL: info
      REGISTRY_LOG_FORMATTER: text
      REGISTRY_LOG_FIELDS_SERVICE: registry
      REGISTRY_LOG_FIELDS_ENVIRONMENT: local
      
      # HTTP Configuration
      REGISTRY_HTTP_ADDR: 0.0.0.0:5000
      REGISTRY_HTTP_HEADERS_X-Content-Type-Options: "[nosniff]"
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: "['*']"
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: "['HEAD','GET','OPTIONS','DELETE']"
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: "['Authorization','Accept','Cache-Control']"
    volumes:
      # Registry data persistence
      - registry-data:/var/lib/registry
      # Authentication files
      - ./registry/auth:/auth:ro
      # Configuration files
      - ./registry/config:/etc/docker/registry:ro
      # TLS certificates (when enabled)
      # - ./registry/certs:/certs:ro
    networks:
      - registry-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/v2/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.personalpipeline.component=registry"
      - "com.personalpipeline.environment=local"
      - "com.personalpipeline.version=2.8.3"

  # Registry UI for Management
  registry-ui:
    image: joxit/docker-registry-ui:2.5.6
    container_name: pp-registry-ui
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      # Registry Connection
      SINGLE_REGISTRY: "true"
      REGISTRY_TITLE: "Personal Pipeline Registry"
      REGISTRY_URL: "http://registry:5000"
      
      # UI Configuration
      DELETE_IMAGES: "true"
      SHOW_CONTENT_DIGEST: "true"
      SHOW_CATALOG_NB_TAGS: "true"
      CATALOG_MIN_BRANCHES: 1
      CATALOG_MAX_BRANCHES: 1
      TAGLIST_PAGE_SIZE: 100
      REGISTRY_SECURED: "true"
      CATALOG_ELEMENTS_LIMIT: 1000
      
      # Theme and Appearance
      THEME: "auto"
      NAVBAR_COLOR: "#2196F3"
      SHOW_TAG_HISTORY: "true"
      
      # Features
      USE_CONTROL_CACHE_HEADER: "false"
      PULL_URL: "localhost:5000"
      
      # History and Logs
      HISTORY_CUSTOM_LABELS: "com.personalpipeline.component,com.personalpipeline.version"
    depends_on:
      - registry
    networks:
      - registry-network
    labels:
      - "com.personalpipeline.component=registry-ui"
      - "com.personalpipeline.environment=local"

  # Registry Cache and Proxy (optional)
  registry-cache:
    image: registry:2.8.3
    container_name: pp-registry-cache
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      # Cache Configuration
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
      REGISTRY_PROXY_USERNAME: ""
      REGISTRY_PROXY_PASSWORD: ""
      
      # Cache Settings
      REGISTRY_STORAGE_CACHE_BLOBDESCRIPTOR: inmemory
      REGISTRY_STORAGE_CACHE_BLOBDESCRIPTORSIZE: 10000
      
      # Health Check
      REGISTRY_HEALTH_STORAGEDRIVER_ENABLED: "true"
      
      # Logging
      REGISTRY_LOG_LEVEL: warn
      REGISTRY_LOG_FORMATTER: json
    volumes:
      - registry-cache-data:/var/lib/registry
      - ./registry/config:/etc/docker/registry:ro
    networks:
      - registry-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/v2/"]
      interval: 60s
      timeout: 10s
      retries: 3
    labels:
      - "com.personalpipeline.component=registry-cache"
      - "com.personalpipeline.environment=local"

  # Registry Backup Service
  registry-backup:
    image: alpine:3.19
    container_name: pp-registry-backup
    restart: "no"
    environment:
      BACKUP_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
      BACKUP_RETENTION_DAYS: "30"
      REGISTRY_DATA_PATH: "/registry-data"
      BACKUP_PATH: "/backups"
    volumes:
      - registry-data:/registry-data:ro
      - registry-backups:/backups
      - ./registry/scripts:/scripts:ro
    networks:
      - registry-network
    command: ["/scripts/backup.sh"]
    depends_on:
      - registry
    labels:
      - "com.personalpipeline.component=registry-backup"
      - "com.personalpipeline.environment=local"

# Networks
networks:
  registry-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
    labels:
      - "com.personalpipeline.network=registry"

# Volumes
volumes:
  # Main registry storage
  registry-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/registry/data
    labels:
      - "com.personalpipeline.volume=registry-data"
      - "com.personalpipeline.backup=enabled"
  
  # Registry cache storage
  registry-cache-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/registry/cache
    labels:
      - "com.personalpipeline.volume=registry-cache"
      - "com.personalpipeline.backup=disabled"
  
  # Registry backups
  registry-backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/registry/backups
    labels:
      - "com.personalpipeline.volume=registry-backups"
      - "com.personalpipeline.backup=disabled"