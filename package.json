{
  "name": "@personal-pipeline/mcp-server",
  "version": "0.1.0",
  "description": "Personal Pipeline - Intelligent MCP server for documentation retrieval and incident response",
  "type": "module",
  "main": "dist/index.js",
  "private": true,
  "scripts": {
    "start": "node dist/index.js",
    "dev": "tsx watch src/index.ts",
    "build": "tsc",
    "clean": "rm -rf dist/",
    "test": "npm run test:node",
    "test:watch": "npm run test:node:watch",
    "test:coverage": "npm run test:node:coverage",
    "test:node": "tsx --test tests/**/*.test.ts",
    "test:node:watch": "tsx --test --watch tests/**/*.test.ts",
    "test:node:coverage": "tsx --test --experimental-test-coverage tests/**/*.test.ts >/dev/null 2>&1 || (echo 'Tests failed during coverage run' >&2 && exit 1)",
    "test:basic": "node test-basic.js",
    "test:ci": "LOG_LEVEL=silent tsx --test tests/**/*.test.ts",
    "test:redis": "TEST_REDIS=true tsx --test tests/**/*.test.ts",
    "test:redis:watch": "TEST_REDIS=true tsx --test --watch tests/**/*.test.ts",
    "lint": "eslint src/ tests/ --ext .ts,.js",
    "lint:fix": "eslint src/ tests/ --ext .ts,.js --fix",
    "format": "prettier --write \"src/**/*.{ts,js,json}\" \"tests/**/*.{ts,js,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json}\" \"tests/**/*.{ts,js,json}\"",
    "typecheck": "tsc --noEmit",
    "prepublishOnly": "npm run clean && npm run build",
    "health": "curl -s http://localhost:3000/health || echo 'Server not running'",
    "generate-sample-data": "node scripts/generate-sample-data.js",
    "validate-config": "node scripts/validate-config.js",
    "test-mcp": "node scripts/test-mcp.js",
    "mcp-explorer": "tsx scripts/mcp-explorer.ts",
    "mcp-explorer:analytics": "tsx scripts/mcp-explorer.ts --analytics",
    "mcp-explorer:test-suite": "tsx scripts/mcp-explorer.ts --test-suite",
    "mcp-explorer:clear-session": "tsx scripts/mcp-explorer.ts --clear-session",
    "test:runner": "node scripts/test-runner.js",
    "test:runner:parallel": "node scripts/test-runner.js --parallel",
    "test:runner:verbose": "node scripts/test-runner.js --verbose --coverage",
    "test:quality-gate": "node scripts/test-runner.js --coverage --bail",
    "benchmark": "node scripts/benchmark.js",
    "benchmark:quick": "node scripts/benchmark.js --concurrent 5 --duration 15 --target 200",
    "benchmark:stress": "node scripts/benchmark.js --concurrent 50 --duration 120 --target 500",
    "load-test": "node scripts/load-test.js",
    "load-test:peak": "node scripts/load-test.js --scenario peak --realtime",
    "load-test:storm": "node scripts/load-test.js --scenario storm --verbose",
    "performance:monitor": "curl -s http://localhost:3000/performance | jq",
    "performance:reset": "curl -X POST -s http://localhost:3000/performance/reset",
    "performance:validate": "node scripts/validate-performance.js",
    "performance:validate:strict": "node scripts/validate-performance.js --strict --verbose",
    "health:dashboard": "node scripts/health-dashboard.js",
    "health:dashboard:fast": "node scripts/health-dashboard.js --interval 2",
    "health:check": "curl -s http://localhost:3000/health/detailed | jq",
    "health:cache": "curl -s http://localhost:3000/health/cache | jq",
    "health:sources": "curl -s http://localhost:3000/health/sources | jq",
    "health:performance": "curl -s http://localhost:3000/health/performance | jq",
    "metrics:prometheus": "curl -s 'http://localhost:3000/metrics?format=prometheus'",
    "monitoring:status": "curl -s http://localhost:3000/monitoring/status | jq",
    "monitoring:alerts": "curl -s http://localhost:3000/monitoring/alerts | jq",
    "monitoring:alerts:active": "curl -s http://localhost:3000/monitoring/alerts/active | jq",
    "monitoring:rules": "curl -s http://localhost:3000/monitoring/rules | jq",
    "circuit-breakers:status": "curl -s http://localhost:3000/circuit-breakers | jq",
    "demo:start": "bash scripts/setup-demo.sh",
    "demo:start:interactive": "bash scripts/setup-demo.sh --interactive",
    "demo:start:memory-only": "bash scripts/setup-demo.sh --no-redis",
    "demo:walkthrough": "node scripts/demo-walkthrough.js",
    "demo:validate": "node scripts/validate-demo.js",
    "demo:stop": "bash scripts/stop-demo.sh",
    "demo:stop:clean": "bash scripts/stop-demo.sh --clean-data",
    "index-docs": "tsx scripts/index-docs.ts",
    "index-docs:incremental": "tsx scripts/index-docs.ts --incremental --show-changes",
    "validate-query-processing": "tsx scripts/validate-query-processing.ts",
    "validate-query-processing:performance": "tsx scripts/validate-query-processing.ts --performance-only",
    "demo-query-processing": "tsx scripts/demo-query-processing.ts",
    "index-docs:parallel": "tsx scripts/index-docs.ts --parallel --batch-size 50",
    "index-docs:verbose": "tsx scripts/index-docs.ts --verbose --show-changes",
    "index-docs:dry-run": "tsx scripts/index-docs.ts --dry-run --verbose",
    "index-docs:quality": "tsx scripts/index-docs.ts --quality-analysis --duplicate-detection",
    "test:integration": "tsx scripts/integration-tests.ts",
    "test:integration:quick": "tsx scripts/integration-tests.ts --quick",
    "test:integration:thorough": "tsx scripts/integration-tests.ts --thorough",
    "test:integration:no-github": "tsx scripts/integration-tests.ts --no-github",
    "test:integration:no-confluence": "tsx scripts/integration-tests.ts --no-confluence",
    "generate:integration-test-data": "tsx scripts/generate-integration-test-data.ts",
    "test:integration:setup": "tsx scripts/generate-integration-test-data.ts && npm run test:integration",
    "registry:start": "docker-compose -f docker-compose.npm-registry.yml up -d",
    "registry:stop": "docker-compose -f docker-compose.npm-registry.yml down",
    "registry:restart": "npm run registry:stop && npm run registry:start",
    "registry:logs": "docker-compose -f docker-compose.npm-registry.yml logs -f npm-registry",
    "registry:status": "docker-compose -f docker-compose.npm-registry.yml ps",
    "registry:health": "curl -s http://localhost:4873/-/ping | jq",
    "registry:setup": "bash scripts/setup-npm-registry.sh",
    "registry:setup:interactive": "bash scripts/setup-npm-registry.sh --interactive",
    "registry:setup:production": "bash scripts/setup-npm-registry.sh --production",
    "registry:adduser": "npm adduser --registry http://localhost:4873",
    "registry:whoami": "npm whoami --registry http://localhost:4873",
    "registry:login": "npm login --registry http://localhost:4873",
    "registry:logout": "npm logout --registry http://localhost:4873",
    "package:build": "bash scripts/build-package.sh",
    "package:build:dev": "bash scripts/build-package.sh --dev",
    "package:build:prod": "bash scripts/build-package.sh --production",
    "package:validate": "bash scripts/test-package.sh",
    "package:test": "bash scripts/test-package.sh --full",
    "package:test:quick": "bash scripts/test-package.sh --quick",
    "package:size": "bash scripts/build-package.sh --size-analysis",
    "package:version": "bash scripts/version.sh",
    "package:version:patch": "bash scripts/version.sh patch",
    "package:version:minor": "bash scripts/version.sh minor",
    "package:version:major": "bash scripts/version.sh major",
    "package:version:prerelease": "bash scripts/version.sh prerelease",
    "package:publish": "bash scripts/publish-package.sh",
    "package:publish:dry-run": "bash scripts/publish-package.sh --dry-run",
    "package:publish:beta": "bash scripts/publish-package.sh --tag beta",
    "package:publish:alpha": "bash scripts/publish-package.sh --tag alpha",
    "package:unpublish": "npm unpublish --registry http://localhost:4873",
    "package:info": "npm info @personal-pipeline/mcp-server --registry http://localhost:4873",
    "package:install": "npm install @personal-pipeline/mcp-server --registry http://localhost:4873",
    "package:update": "npm update @personal-pipeline/mcp-server --registry http://localhost:4873",
    "release:prepare": "bash scripts/release-manager.sh prepare",
    "release:create": "bash scripts/release-manager.sh create",
    "release:publish": "bash scripts/release-manager.sh publish",
    "release:rollback": "bash scripts/release-manager.sh rollback",
    "release:changelog": "bash scripts/release-manager.sh changelog",
    "release:auto": "bash scripts/release-coordinator.sh auto",
    "release:patch": "bash scripts/release-coordinator.sh patch",
    "release:minor": "bash scripts/release-coordinator.sh minor",
    "release:major": "bash scripts/release-coordinator.sh major",
    "release:prerelease": "bash scripts/release-coordinator.sh prerelease",
    "release:rc": "bash scripts/release-coordinator.sh rc",
    "release:hotfix": "bash scripts/release-coordinator.sh hotfix",
    "release:dry-run": "bash scripts/release-coordinator.sh auto --dry-run",
    "release:interactive": "bash scripts/release-coordinator.sh auto --interactive",
    "release:semantic": "node scripts/semantic-release.js",
    "release:semantic:analyze": "node scripts/semantic-release.js analyze",
    "release:github": "node scripts/github-release.js",
    "release:github:dry-run": "node scripts/github-release.js --dry-run",
    "release:validate": "node scripts/release-validation.js",
    "release:validate:quality": "node scripts/release-validation.js quality",
    "release:validate:security": "node scripts/release-validation.js security",
    "release:validate:report": "node scripts/release-validation.js --output release-validation-report.json",
    "docs:dev": "cd website_docs && npx vitepress dev",
    "docs:build": "cd website_docs && npx vitepress build",
    "docs:preview": "cd website_docs && npx vitepress preview",
    "docs:theme": "node website_docs/.vitepress/theme-switcher.js",
    "docs:theme:professional": "npm run docs:theme professional",
    "docs:theme:dark": "npm run docs:theme dark",
    "docs:theme:minimalist": "npm run docs:theme minimalist",
    "docs:theme:enterprise": "npm run docs:theme enterprise",
    "docs:default": "npm run docs:theme minimalist",
    "build:all-themes": "node scripts/build-all-themes.js",
    "serve:themes": "node scripts/serve-themes.js",
    "serve:themes:simple": "node scripts/serve-themes-simple.js",
    "cicd": "bash scripts/cicd-coordinator.sh",
    "cicd:status": "bash scripts/cicd-coordinator.sh status",
    "cicd:validate": "bash scripts/cicd-coordinator.sh validate",
    "cicd:build": "bash scripts/cicd-coordinator.sh build all",
    "cicd:build:npm": "bash scripts/cicd-coordinator.sh build npm",
    "cicd:build:docker": "bash scripts/cicd-coordinator.sh build docker",
    "cicd:version": "bash scripts/cicd-coordinator.sh version",
    "cicd:version:patch": "bash scripts/cicd-coordinator.sh version patch",
    "cicd:version:minor": "bash scripts/cicd-coordinator.sh version minor",
    "cicd:version:major": "bash scripts/cicd-coordinator.sh version major",
    "cicd:setup": "bash scripts/cicd-coordinator.sh setup",
    "cicd:cleanup": "bash scripts/cicd-coordinator.sh cleanup",
    "cicd:monitoring": "bash scripts/cicd-coordinator.sh monitoring"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "documentation",
    "incident-response",
    "langraph",
    "operational-runbooks",
    "ai-agent",
    "private-registry",
    "verdaccio",
    "npm-registry"
  ],
  "author": {
    "name": "Personal Pipeline Team",
    "email": "team@personal-pipeline.dev",
    "url": "https://personal-pipeline.dev"
  },
  "license": "MIT",
  "publishConfig": {
    "registry": "http://localhost:4873",
    "access": "restricted"
  },
  "files": [
    "dist/**/*",
    "lib/**/*",
    "bin/**/*",
    "config/config.sample.yaml",
    "config/github-sample.yaml",
    "config/web-sample.yaml",
    "docs/API.md",
    "docs/ARCHITECTURE.md",
    "docs/DEPLOYMENT.md",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "SECURITY.md"
  ],
  "bin": {
    "personal-pipeline": "./bin/personal-pipeline.js",
    "pp-mcp": "./bin/pp-mcp.js",
    "pp": "./bin/pp.js"
  },
  "peerDependencies": {
    "node": ">=20.0.0"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^0.5.0",
    "@octokit/auth-app": "^8.0.2",
    "@octokit/graphql": "^9.0.1",
    "@octokit/rest": "^22.0.0",
    "@octokit/webhooks": "^14.1.3",
    "@types/xml2js": "^0.4.14",
    "@xenova/transformers": "^2.8.0",
    "axios": "^1.11.0",
    "chalk": "^5.5.0",
    "cheerio": "^1.1.2",
    "chokidar": "^4.0.3",
    "commander": "^14.0.0",
    "confluence-api": "^1.4.0",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "file-type": "^21.0.0",
    "fuse.js": "^7.0.0",
    "glob": "^11.0.3",
    "got": "^14.0.0",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "jsonpath-plus": "^10.3.0",
    "jspdf": "^3.0.1",
    "morgan": "^1.10.0",
    "node-cache": "^5.1.2",
    "normalize-url": "^8.0.0",
    "openapi-types": "^12.1.3",
    "ora": "^8.2.0",
    "p-limit": "^5.0.0",
    "pdf-parse": "^1.1.1",
    "redis": "^4.6.0",
    "robots-parser": "^3.0.0",
    "swagger-ui-express": "^5.0.1",
    "turndown": "^7.2.1",
    "winston": "^3.11.0",
    "xml2js": "^0.6.2",
    "yaml": "^2.3.4",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/cheerio": "^0.22.35",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/glob": "^8.1.0",
    "@types/morgan": "^1.9.9",
    "@types/mysql": "^2.15.27",
    "@types/node": "^20.19.10",
    "@types/pdf-parse": "^1.1.5",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.2",
    "@types/swagger-ui-express": "^4.1.8",
    "@types/turndown": "^5.0.4",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "form-data": "^4.0.0",
    "nock": "^13.5.0",
    "prettier": "^3.1.0",
    "semver": "^7.5.4",
    "supertest": "^6.3.3",
    "tsx": "^4.6.2",
    "typescript": "^5.3.3",
    "vitepress": "^1.6.4"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/personal-pipeline-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/personal-pipeline-mcp/issues"
  },
  "homepage": "https://github.com/your-username/personal-pipeline-mcp#readme"
}
