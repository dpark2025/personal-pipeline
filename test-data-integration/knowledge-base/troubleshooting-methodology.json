{
  "id": "KB-TROU-001",
  "title": "Systematic Troubleshooting Methodology",
  "content": "# Systematic Troubleshooting Methodology\n\n## Overview\nStructured approach to identifying, diagnosing, and resolving technical issues efficiently.\n\n## Troubleshooting Framework\n\n### 1. Problem Identification\n- **Symptom Description**: What is happening?\n- **Impact Assessment**: Who/what is affected?\n- **Timeline**: When did it start?\n- **Scope**: How widespread is the issue?\n\n### 2. Information Gathering\n- **System State**: Current status and metrics\n- **Recent Changes**: Deployments, configurations\n- **Error Messages**: Logs and user reports\n- **Environmental Factors**: Load, resource usage\n\n### 3. Hypothesis Formation\n- **Root Cause Theories**: Possible explanations\n- **Probability Assessment**: Likelihood ranking\n- **Testing Strategy**: How to validate theories\n- **Impact Consideration**: Risk of investigative actions\n\n### 4. Testing and Validation\n- **Controlled Testing**: Isolated environment tests\n- **Progressive Validation**: Incremental verification\n- **Documentation**: Record findings and attempts\n- **Rollback Planning**: Undo strategies\n\n## Systematic Investigation Process\n\n### Phase 1: Initial Assessment (5 minutes)\n```bash\n# Quick system overview\nuptime\ndf -h\nfree -h\nps aux | head -20\n\n# Network connectivity\nping -c 3 8.8.8.8\ncurl -I http://localhost:8080/health\n\n# Recent system activity\ntail -50 /var/log/syslog\njournalctl -u service-name --since \"10 minutes ago\"\n```\n\n### Phase 2: Detailed Analysis (15 minutes)\n```bash\n# Performance metrics\niostat -x 1 5\nvmstat 5 5\nnetstat -tulpn\n\n# Application-specific checks\ncurl -s http://localhost:8080/metrics\ndocker logs container-name --tail 100\nkubectl describe pod pod-name\n```\n\n### Phase 3: Deep Investigation (30+ minutes)\n```bash\n# System trace analysis\nstrace -p PID -f -e trace=network\ntcpdump -i any -n -s 0 host problematic-host\n\n# Database investigation\nmysql -e \"SHOW PROCESSLIST;\"\npg_stat_activity query for PostgreSQL\n\n# Memory and CPU profiling\nperf top -p PID\njstack PID (for Java applications)\n```\n\n## Common Problem Categories\n\n### Application Issues\n\n#### Performance Problems\n```bash\n# Identify bottlenecks\ntop -p APPLICATION_PID\nlsof -p APPLICATION_PID\nstrace -c -p APPLICATION_PID\n\n# Database performance\nEXPLAIN ANALYZE SELECT * FROM slow_table;\nSHOW ENGINE INNODB STATUS;\n```\n\n#### Memory Issues\n```bash\n# Memory usage analysis\ncat /proc/PID/status | grep -E \"(VmSize|VmRSS|VmData|VmStk)\"\nsmem -p\nvalgrind --tool=memcheck --leak-check=full APPLICATION\n\n# Java heap analysis\njmap -histo PID\njstat -gc PID 5s 10\n```\n\n#### Connection Issues\n```bash\n# Connection tracking\nnetstat -an | grep :8080\nss -tulpn | grep :8080\nlsof -i :8080\n\n# Connection pool status\ncurl -s http://localhost:8080/actuator/metrics/hikaricp.connections\n```\n\n### Infrastructure Issues\n\n#### Network Problems\n```bash\n# Network diagnostics\ntraceroute destination-host\nmtr -r -c 10 destination-host\niperf3 -c destination-host\n\n# DNS resolution\nnslookup hostname\ndig @8.8.8.8 hostname\nhost hostname\n```\n\n#### Storage Issues\n```bash\n# Disk analysis\niotop -o\niostat -x 1 5\nlsblk -f\n\n# File system checks\nfsck /dev/device\ntune2fs -l /dev/device\n```\n\n#### Service Dependencies\n```bash\n# Service status\nsystemctl status service-name\njournalctl -u service-name -f\n\n# Dependency chain\nsystemctl list-dependencies service-name\nsystemctl show service-name\n```\n\n## Troubleshooting Tools and Techniques\n\n### Log Analysis\n```bash\n# Centralized log analysis\ngrep -r \"ERROR\" /var/log/\njournalctl --since \"1 hour ago\" --until now\ntail -f /var/log/application.log | grep ERROR\n\n# Log correlation\nawk '/ERROR/{print $1, $2, $NF}' /var/log/application.log\nsed -n '/2023-12-01 10:00/,/2023-12-01 11:00/p' /var/log/application.log\n```\n\n### Performance Profiling\n```bash\n# CPU profiling\nperf record -g ./application\nperf report\n\n# Memory profiling\nvalgrind --tool=massif ./application\nms_print massif.out.PID\n\n# I/O profiling\niotop -a -o\niftop -i interface\n```\n\n### Network Analysis\n```bash\n# Packet capture\ntcpdump -i any -s 0 -w capture.pcap host problematic-host\nwireshark capture.pcap\n\n# Network flow analysis\nnetstat -i\nss -tuln\nnload interface-name\n```\n\n## Documentation and Communication\n\n### Issue Documentation Template\n```markdown\n## Issue Summary\n- **Problem**: Brief description\n- **Impact**: Affected users/services\n- **Severity**: Critical/High/Medium/Low\n- **Start Time**: When issue began\n\n## Investigation\n- **Symptoms**: What was observed\n- **Investigation Steps**: What was checked\n- **Findings**: Key discoveries\n- **Root Cause**: Confirmed or suspected cause\n\n## Resolution\n- **Fix Applied**: What was done\n- **Verification**: How success was confirmed\n- **Rollback Plan**: If fix fails\n- **Follow-up**: Preventive measures\n```\n\n### Escalation Criteria\n- **Immediate**: Critical system down, data loss\n- **1 Hour**: High impact, multiple users affected\n- **4 Hours**: Medium impact, single service affected\n- **Next Day**: Low impact, non-critical issues\n\n## Prevention and Improvement\n\n### Root Cause Analysis\n1. **Problem Statement**: Clear issue description\n2. **Timeline**: Sequence of events\n3. **Contributing Factors**: What allowed the issue\n4. **Root Cause**: Fundamental underlying cause\n5. **Corrective Actions**: Immediate fixes\n6. **Preventive Measures**: Long-term improvements\n\n### Knowledge Management\n- Document common issues and solutions\n- Maintain troubleshooting runbooks\n- Share lessons learned across teams\n- Regular review and update procedures\n- Create automated diagnostic tools\n\n### Continuous Improvement\n- Post-incident reviews\n- Process refinement\n- Tool enhancement\n- Training and skill development\n- Proactive monitoring improvements\n",
  "category": "troubleshooting",
  "tags": [
    "troubleshooting",
    "methodology",
    "debugging",
    "investigation"
  ],
  "type": "knowledge_base",
  "created_at": "2025-08-15T22:45:50.422Z",
  "updated_at": "2025-08-15T22:45:50.422Z"
}