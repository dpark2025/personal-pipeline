{
  "id": "PROC-BACKUP-001",
  "title": "Database Backup and Recovery",
  "content": "# Database Backup and Recovery Procedure\n\n## Purpose\nCreate reliable database backups and validate recovery procedures.\n\n## Prerequisites\n- Database administrative access\n- Sufficient storage space for backup\n- Maintenance window scheduled\n- Application write access coordination\n\n## Procedure Steps\n\n### Step 1: Pre-Backup Preparation (5 minutes)\n```bash\n# Check database status\nmysql -e \"SHOW PROCESSLIST;\"\nmysql -e \"SHOW ENGINE INNODB STATUS\\G\" | grep -A 20 \"TRANSACTIONS\"\n\n# Verify disk space\ndf -h /backup/location\n\n# Stop application writes (coordinate with team)\ncurl -X POST http://application:8080/maintenance/start\n```\n\n**Expected Outcome**: Database ready for backup, application in maintenance mode\n**Success Criteria**: No active long-running transactions, sufficient disk space\n\n### Step 2: Create Database Backup (15 minutes)\n```bash\n# Create timestamped backup\nTIMESTAMP=$(date +%Y%m%d_%H%M%S)\nBACKUP_FILE=\"/backup/db_backup_${TIMESTAMP}.sql\"\n\n# Perform backup with consistency\nmysqldump --single-transaction --routines --triggers --all-databases > $BACKUP_FILE\n\n# Compress backup\ngzip $BACKUP_FILE\n\n# Verify backup file created\nls -lh \"${BACKUP_FILE}.gz\"\n```\n\n**Expected Outcome**: Complete database backup created and compressed\n**Success Criteria**: Backup file exists and has reasonable size\n\n### Step 3: Backup Validation (10 minutes)\n```bash\n# Check backup integrity\ngunzip -t \"${BACKUP_FILE}.gz\"\n\n# Verify backup contents\nzcat \"${BACKUP_FILE}.gz\" | head -50\nzcat \"${BACKUP_FILE}.gz\" | tail -50\n\n# Test restore on test database (if available)\nmysql test_db < <(zcat \"${BACKUP_FILE}.gz\")\nmysql test_db -e \"SELECT COUNT(*) FROM important_table;\"\n```\n\n**Expected Outcome**: Backup integrity confirmed\n**Success Criteria**: Backup can be read and contains expected data\n\n### Step 4: Secure Backup Storage (5 minutes)\n```bash\n# Copy to secure location\nrsync -av \"${BACKUP_FILE}.gz\" backup-server:/secure/backups/\n\n# Verify remote copy\nssh backup-server \"ls -lh /secure/backups/db_backup_${TIMESTAMP}.sql.gz\"\n\n# Set proper permissions\nchmod 600 \"${BACKUP_FILE}.gz\"\nssh backup-server \"chmod 600 /secure/backups/db_backup_${TIMESTAMP}.sql.gz\"\n```\n\n**Expected Outcome**: Backup securely stored in multiple locations\n**Success Criteria**: Backup available on primary and backup storage\n\n### Step 5: Resume Operations (2 minutes)\n```bash\n# Resume application writes\ncurl -X POST http://application:8080/maintenance/stop\n\n# Verify application functionality\ncurl -f http://application:8080/health\ncurl -f http://application:8080/api/test\n\n# Check database performance\nmysql -e \"SHOW PROCESSLIST;\"\n```\n\n**Expected Outcome**: Normal operations resumed\n**Success Criteria**: Application responding normally, database performance good\n\n## Recovery Procedure\n\n### Emergency Recovery Steps\n```bash\n# Stop application\ncurl -X POST http://application:8080/maintenance/start\n\n# Restore from backup\nzcat /backup/db_backup_${TIMESTAMP}.sql.gz | mysql\n\n# Verify data integrity\nmysql -e \"CHECK TABLE important_table;\"\n\n# Resume application\ncurl -X POST http://application:8080/maintenance/stop\n```\n\n## Success Criteria\n- [ ] Backup completed without errors\n- [ ] Backup integrity verified\n- [ ] Backup stored securely\n- [ ] Application downtime minimized\n- [ ] Recovery procedure tested\n- [ ] Documentation updated\n\n## Monitoring and Alerting\n- Backup completion notification\n- Backup size monitoring\n- Automated integrity checking\n- Recovery time objectives met\n\n## Disaster Recovery Integration\n- Offsite backup replication\n- Cross-region backup storage\n- Automated recovery testing\n- Business continuity planning\n",
  "steps": [
    "Stop application writes",
    "Create database dump",
    "Verify backup integrity",
    "Store backup securely",
    "Resume operations"
  ],
  "prerequisites": [
    "database access",
    "storage space",
    "maintenance window"
  ],
  "type": "procedure",
  "created_at": "2025-08-15T22:45:50.423Z",
  "updated_at": "2025-08-15T22:45:50.423Z"
}